{"version":3,"file":"useManageInput-bd87c1dd.js","sources":["../../src/utils/hooks/useManageInput.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\"\r\nimport { OnChangeText } from \"../type\"\r\n\r\nexport const useManageInput = (\r\n  valueInitiel: string,\r\n  onChangeValue?: OnChangeText\r\n) => {\r\n  const [value, setValue] = useState(valueInitiel)\r\n  const [focus, setFocus] = useState(false)\r\n  useEffect(() => {\r\n    setValue(valueInitiel)\r\n  }, [valueInitiel])\r\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = useCallback(\r\n    (e) => {\r\n      onChangeValue && onChangeValue(e.target.value)\r\n      setValue(e.target.value)\r\n    },\r\n    []\r\n  )\r\n  const onFocus: React.FocusEventHandler<HTMLInputElement> = useCallback(() => {\r\n    setFocus(true)\r\n  }, [])\r\n  const onBlur: React.FocusEventHandler<HTMLInputElement> = useCallback(() => {\r\n    setFocus(false)\r\n  }, [])\r\n\r\n  return {\r\n    value,\r\n    focus,\r\n    functions: {\r\n      onChange,\r\n      onFocus,\r\n      onBlur,\r\n    },\r\n  }\r\n}\r\n"],"names":["useManageInput","valueInitiel","onChangeValue","value","setValue","useState","focus","setFocus","useEffect","onChange","useCallback","e","onFocus","onBlur"],"mappings":"wCAGa,MAAAA,EAAiB,CAC5BC,EACAC,IACG,CACH,KAAM,CAACC,EAAOC,CAAQ,EAAIC,WAASJ,CAAY,EACzC,CAACK,EAAOC,CAAQ,EAAIF,WAAS,EAAK,EACxCG,EAAAA,UAAU,IAAM,CACdJ,EAASH,CAAY,CAAA,EACpB,CAACA,CAAY,CAAC,EACjB,MAAMQ,EAAuDC,EAAA,YAC1DC,GAAM,CACYT,GAAAA,EAAcS,EAAE,OAAO,KAAK,EACpCP,EAAAO,EAAE,OAAO,KAAK,CACzB,EACA,CAAC,CAAA,EAEGC,EAAqDF,EAAAA,YAAY,IAAM,CAC3EH,EAAS,EAAI,CACf,EAAG,CAAE,CAAA,EACCM,EAAoDH,EAAAA,YAAY,IAAM,CAC1EH,EAAS,EAAK,CAChB,EAAG,CAAE,CAAA,EAEE,MAAA,CACL,MAAAJ,EACA,MAAAG,EACA,UAAW,CACT,SAAAG,EACA,QAAAG,EACA,OAAAC,CACF,CAAA,CAEJ"}